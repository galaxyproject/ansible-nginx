---

- name: Install AppStream nginx
  ansible.builtin.dnf:
    name: nginx
  notify:
    - Restart nginx

- name: Set permissions on temporary directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nginx_conf_user | default('nginx') }}"
    group: "{{ nginx_conf_group | default('nginx') }}"
    mode: "0700"
  loop:
    - /var/lib/nginx
    - /var/lib/nginx/tmp

- name: Template nginx config file
  ansible.builtin.template:
    src: epel-nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    backup: true
    mode: "0644"
  notify:
    - Restart nginx

- name: Create virtual host and modules directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ nginx_conf_dir }}/sites-available"
    - "{{ nginx_conf_dir }}/sites-enabled"
    - "{{ nginx_conf_dir }}/modules-enabled"
  notify:
    - Reload nginx

- name: Configure module loading
  ansible.builtin.copy:
    dest: "/etc/nginx/modules-enabled/{{ item.order | default('50') }}-{{ item.path | basename | splitext | first }}.conf"
    content: |
      ## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
      load_module {{ (item.path is abs) | ternary("", "/usr/lib64/nginx/modules/") }}{{ item.path }};
    mode: "0644"
  loop: "{{ nginx_load_modules }}"
  notify:
    - Restart nginx

- name: Create config including virtual hosts
  ansible.builtin.copy:
    dest: "{{ nginx_conf_dir }}/conf.d/sites-enabled.conf"
    content: |
      ## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
      include {{ nginx_conf_dir }}/sites-enabled/*;
    mode: "0644"
  notify:
    - Reload nginx

- name: Set default server redirection
  ansible.builtin.copy:
    dest: "{{ nginx_conf_dir }}/default.d/redirect.conf"
    content: |
      ## This file is maintained by Ansible - CHANGES WILL BE OVERWRITTEN
      return 302 {{ nginx_default_redirect_uri }};
    mode: "0644"
  when: nginx_default_redirect_uri is defined
  notify:
    - Reload nginx
